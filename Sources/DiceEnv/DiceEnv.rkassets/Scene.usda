#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.120.2)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "GoldenDroid_D04"]

def Xform "Root"
{
    reorder nameChildren = ["TestSkins", "Dice", "PaintedWorn", "Sapphire", "SteelDarkAged", "Clouds", "BlueEdge", "GoldenDroid", "DarkMarble"]
    def Xform "TestSkins" (
        active = true
    )
    {
        def Material "rainbow"
        {
            reorder nameChildren = ["UnlitSurface", "ColorMap"]
            token outputs:mtlx:surface.connect = </Root/TestSkins/rainbow/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (274.6049, 99.15568)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 207

            def NodeGraph "ColorMap"
            {
                color3f outputs:Combine3_out.connect = </Root/TestSkins/rainbow/ColorMap/Combine3.outputs:out>
                float2 ui:nodegraph:node:pos = (-210.42508, -68.494896)
                int ui:nodegraph:node:stackingOrder = 1170
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Combine3_out"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1210.75, 91.5)

                def Shader "Separate3"
                {
                    uniform token info:id = "ND_separate3_vector3"
                    float3 inputs:in.connect = </Root/TestSkins/rainbow/ColorMap/Remap.outputs:out>
                    float outputs:outx
                    float outputs:outy
                    float outputs:outz
                    float2 ui:nodegraph:node:pos = (773.75, 91.5)
                    int ui:nodegraph:node:stackingOrder = 279
                }

                def Shader "Remap"
                {
                    uniform token info:id = "ND_remap_vector3"
                    float3 inputs:in.connect = </Root/TestSkins/rainbow/ColorMap/TransformVector.outputs:out>
                    float3 inputs:inhigh = (0.5, 0.5, 0.5)
                    float3 inputs:inlow = (-0.5, -0.5, -0.5)
                    float3 inputs:outhigh
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (541.5, 91.5)
                    int ui:nodegraph:node:stackingOrder = 271
                }

                def Shader "TransformVector"
                {
                    uniform token info:id = "ND_transformvector_vector3"
                    string inputs:fromspace = "model"
                    float3 inputs:in.connect = </Root/TestSkins/rainbow/ColorMap/Position.outputs:out>
                    string inputs:tospace = "world"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (290.75, 91.5)
                    int ui:nodegraph:node:stackingOrder = 271
                    string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:fromspace"]
                }

                def Shader "Position"
                {
                    uniform token info:id = "ND_position_vector3"
                    string inputs:space = "tangent"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (68.75, 91.5)
                    int ui:nodegraph:node:stackingOrder = 281
                }

                def Shader "Combine3"
                {
                    uniform token info:id = "ND_combine3_color3"
                    float inputs:in1.connect = </Root/TestSkins/rainbow/ColorMap/Separate3.outputs:outx>
                    float inputs:in2.connect = </Root/TestSkins/rainbow/ColorMap/Separate3.outputs:outy>
                    float inputs:in3.connect = </Root/TestSkins/rainbow/ColorMap/Separate3.outputs:outz>
                    color3f outputs:out
                    float2 ui:nodegraph:node:pos = (981, 91.5)
                    int ui:nodegraph:node:stackingOrder = 271
                }
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion
                color3f inputs:baseColor.connect = </Root/TestSkins/rainbow/ColorMap.outputs:Combine3_out>
                float3 inputs:clearcoatNormal
                color3f inputs:emissiveColor = (0, 0, 0) (
                    colorSpace = "lin_srgb"
                )
                color3f inputs:emissiveColor.connect = </Root/TestSkins/rainbow/image_1.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = None
                float3 inputs:normal.connect = </Root/TestSkins/rainbow/image.outputs:out>
                float inputs:opacity
                float inputs:roughness = 1
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (-6.6865435, 118.469025)
                int ui:nodegraph:node:stackingOrder = 1164
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:emissiveColor"]
            }

            def Shader "image"
            {
                uniform token info:id = "ND_image_vector3"
                float3 inputs:default = (0, 0, 0)
                asset inputs:file = @D20_SteelDark_normal.png@
                string inputs:filtertype
                string inputs:uaddressmode = "periodic"
                string inputs:vaddressmode = "periodic"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-385.61945, 277.2202)
                int ui:nodegraph:node:stackingOrder = 1154
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "image_1"
            {
                uniform token info:id = "ND_image_color3"
                color3f inputs:default = (1, 1, 1) (
                    colorSpace = "lin_srgb"
                )
                asset inputs:file = @D20_SteelDark_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-382.39288, -143.77585)
                int ui:nodegraph:node:stackingOrder = 1166
            }
        }

        def Material "rainbow1_D20"
        {
            token outputs:mtlx:surface.connect = </Root/TestSkins/rainbow1_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-371.64062, 33.105103)
            int ui:nodegraph:node:stackingOrder = 1
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1475.7712, -219.65659)
                int ui:nodegraph:node:stackingOrder = 1117
            }

            def Shader "TransformVector"
            {
                uniform token info:id = "ND_transformvector_vector3"
                string inputs:fromspace = "model"
                float3 inputs:in.connect = </Root/TestSkins/rainbow1_D20/Position.outputs:out>
                string inputs:tospace = "world"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1291.5876, -202.75423)
                int ui:nodegraph:node:stackingOrder = 1117
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:fromspace"]
            }

            def Shader "Separate3"
            {
                uniform token info:id = "ND_separate3_vector3"
                float3 inputs:in.connect = </Root/TestSkins/rainbow1_D20/Remap.outputs:out>
                float outputs:outx
                float outputs:outy
                float outputs:outz
                float2 ui:nodegraph:node:pos = (-868.2662, -106.56046)
                int ui:nodegraph:node:stackingOrder = 1040
            }

            def Shader "Combine3"
            {
                uniform token info:id = "ND_combine3_color3"
                float inputs:in1.connect = </Root/TestSkins/rainbow1_D20/nodegraph.outputs:SmoothStep_out>
                float inputs:in2.connect = </Root/TestSkins/rainbow1_D20/nodegraph_2.outputs:SmoothStep_out>
                float inputs:in3.connect = </Root/TestSkins/rainbow1_D20/nodegraph_1.outputs:SmoothStep_out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-400.23694, -72.622345)
                int ui:nodegraph:node:stackingOrder = 1042
            }

            def Shader "Remap"
            {
                uniform token info:id = "ND_remap_vector3"
                float3 inputs:in.connect = </Root/TestSkins/rainbow1_D20/TransformVector.outputs:out>
                float3 inputs:inhigh = (0.5, 0.5, 0.5)
                float3 inputs:inlow = (-0.5, -0.5, -0.5)
                float3 inputs:outhigh = (1, 1, 1)
                float3 inputs:outlow = (0, 0, 0.5)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1068.4481, -178.96454)
                int ui:nodegraph:node:stackingOrder = 1040
            }

            def NodeGraph "nodegraph"
            {
                float inputs:Range_in (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (63, 109.5)
                        }
                    }
                )
                float inputs:Range_in.connect = </Root/TestSkins/rainbow1_D20/Separate3.outputs:outz>
                float outputs:SmoothStep_out.connect = </Root/TestSkins/rainbow1_D20/nodegraph/SmoothStep.outputs:out>
                float2 ui:nodegraph:node:pos = (-634.8731, -213.41832)
                int ui:nodegraph:node:stackingOrder = 1082
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:Range_in", "outputs:SmoothStep_out", "inputs:Range_in"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (634.75, 109.5)

                def Shader "SmoothStep"
                {
                    uniform token info:id = "ND_smoothstep_float"
                    float inputs:high
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph/Range.outputs:out>
                    float inputs:low
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (428.75, 109.5)
                    int ui:nodegraph:node:stackingOrder = 451
                }

                def Shader "Range"
                {
                    uniform token info:id = "ND_range_float"
                    bool inputs:doclamp = 1
                    float inputs:gamma
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph.inputs:Range_in>
                    float inputs:inhigh = 1.1
                    float inputs:inlow = 0.1
                    float inputs:outhigh
                    float inputs:outlow = 0.2
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (245.5, 109.5)
                    int ui:nodegraph:node:stackingOrder = 460
                }
            }

            def NodeGraph "nodegraph_1"
            {
                float inputs:Range_in (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (63, 109.5)
                        }
                    }
                )
                float inputs:Range_in.connect = </Root/TestSkins/rainbow1_D20/Separate3.outputs:outz>
                float outputs:SmoothStep_out.connect = </Root/TestSkins/rainbow1_D20/nodegraph_1/SmoothStep.outputs:out>
                float2 ui:nodegraph:node:pos = (-632.76324, 16.205547)
                int ui:nodegraph:node:stackingOrder = 1040
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:Range_in"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (634.75, 109.5)

                def Shader "SmoothStep"
                {
                    uniform token info:id = "ND_smoothstep_float"
                    float inputs:high
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph_1/Range.outputs:out>
                    float inputs:low
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (428.75, 109.5)
                    int ui:nodegraph:node:stackingOrder = 451
                }

                def Shader "Range"
                {
                    uniform token info:id = "ND_range_float"
                    bool inputs:doclamp = 1
                    float inputs:gamma
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph_1.inputs:Range_in>
                    float inputs:inhigh
                    float inputs:inlow
                    float inputs:outhigh
                    float inputs:outlow = 0.2
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (245.5, 109.5)
                    int ui:nodegraph:node:stackingOrder = 457
                }
            }

            def NodeGraph "nodegraph_2"
            {
                float inputs:Range_in (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (63, 109.5)
                        }
                    }
                )
                float inputs:Range_in.connect = </Root/TestSkins/rainbow1_D20/Separate3.outputs:outz>
                float outputs:SmoothStep_out.connect = </Root/TestSkins/rainbow1_D20/nodegraph_2/SmoothStep.outputs:out>
                float2 ui:nodegraph:node:pos = (-631.8453, -99.93508)
                int ui:nodegraph:node:stackingOrder = 1040
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:Range_in"]
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (634.75, 109.5)

                def Shader "SmoothStep"
                {
                    uniform token info:id = "ND_smoothstep_float"
                    float inputs:high
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph_2/Range.outputs:out>
                    float inputs:low
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (428.75, 109.5)
                    int ui:nodegraph:node:stackingOrder = 451
                }

                def Shader "Range"
                {
                    uniform token info:id = "ND_range_float"
                    bool inputs:doclamp = 1
                    float inputs:gamma
                    float inputs:in.connect = </Root/TestSkins/rainbow1_D20/nodegraph_2.inputs:Range_in>
                    float inputs:inhigh = 1.2
                    float inputs:inlow = 0.3
                    float inputs:outhigh = 0.8
                    float inputs:outlow = 0
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (245.5, 109.5)
                    int ui:nodegraph:node:stackingOrder = 461
                }
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion
                color3f inputs:baseColor.connect = </Root/TestSkins/rainbow1_D20/Combine3.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/TestSkins/rainbow1_D20/image_1.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/TestSkins/rainbow1_D20/image.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness = 1
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (-81.53121, 256.84128)
                int ui:nodegraph:node:stackingOrder = 1081
            }

            def Shader "image"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @D20_SteelDark_normal 1.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-591.6773, 713.26917)
                int ui:nodegraph:node:stackingOrder = 1118
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "image_1"
            {
                uniform token info:id = "ND_image_color3"
                color3f inputs:default = (1, 1, 1) (
                    colorSpace = "lin_srgb"
                )
                asset inputs:file = @D20_SteelDark_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-592.60834, 294.2955)
                int ui:nodegraph:node:stackingOrder = 1121
            }
        }

        def Material "CellShader_D20"
        {
            reorder nameChildren = ["UnlitSurface", "LightDirection", "NormalsWorldSpace", "DotProduct", "NormalizeLightDirection", "NormalizeNormals", "Swizzle", "Normals", "Remap", "Step", "HighlightColor", "Multiply"]
            token outputs:mtlx:surface.connect = </Root/TestSkins/CellShader_D20/UnlitSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (957.9045, 203.34927)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 465

            def Shader "UnlitSurface"
            {
                uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                bool inputs:applyPostProcessToneMap = 0
                color3f inputs:color.connect = </Root/TestSkins/CellShader_D20/Add_1.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:opacity
                float inputs:opacityThreshold
                token outputs:out
                float2 ui:nodegraph:node:pos = (709.102, 151.95349)
                int ui:nodegraph:node:stackingOrder = 794
            }

            def Shader "LightDirection"
            {
                uniform token info:id = "ND_constant_vector3"
                float3 inputs:value = (1, 1, -1)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-924.14844, 14.4453125)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "NormalsWorldSpace"
            {
                uniform token info:id = "ND_normal_vector3"
                string inputs:space = "world"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1259.5157, 0.7650965)
                int ui:nodegraph:node:stackingOrder = 1070
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector3"
                float3 inputs:in1.connect = </Root/TestSkins/CellShader_D20/NormalizeLightDirection.outputs:out>
                float3 inputs:in2.connect = </Root/TestSkins/CellShader_D20/NormalizeNormals.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-473.5078, 62.07422)
                int ui:nodegraph:node:stackingOrder = 373
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "NormalizeLightDirection"
            {
                uniform token info:id = "ND_normalize_vector3"
                float3 inputs:in.connect = </Root/TestSkins/CellShader_D20/LightDirection.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-695.1719, 14.40625)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "NormalizeNormals"
            {
                uniform token info:id = "ND_normalize_vector3"
                float3 inputs:in.connect = </Root/TestSkins/CellShader_D20/Normals.outputs:NormalMap_out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-691.3672, 92.984375)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "Remap"
            {
                uniform token info:id = "ND_remap_float"
                float inputs:in.connect = </Root/TestSkins/CellShader_D20/DotProduct.outputs:out>
                float inputs:inhigh
                float inputs:inlow = -1
                float inputs:outhigh
                float outputs:out
                float2 ui:nodegraph:node:pos = (-301.4942, 84.649826)
                int ui:nodegraph:node:stackingOrder = 788
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader_D20/HighlightColor.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader_D20/Step.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (278.5378, 27.445835)
                int ui:nodegraph:node:stackingOrder = 752
            }

            def Shader "HighlightColor"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.9995341, 0.9883556, 0.47265524) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-79.1284, -83.02539)
                int ui:nodegraph:node:stackingOrder = 1059
            }

            def Shader "Step"
            {
                uniform token info:id = "ND_realitykit_step_float"
                float inputs:edge = 0.8
                float inputs:in.connect = </Root/TestSkins/CellShader_D20/Remap.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-61.770523, 15.956373)
                int ui:nodegraph:node:stackingOrder = 1059
            }

            def Shader "HighlightColor_1"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.45009387, 0.9813226, 0.47430307) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-91.66671, 179.70107)
                int ui:nodegraph:node:stackingOrder = 1059
            }

            def Shader "Step_1"
            {
                uniform token info:id = "ND_realitykit_step_float"
                float inputs:edge = 0.4
                float inputs:in.connect = </Root/TestSkins/CellShader_D20/Remap.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-69.05597, 281.45862)
                int ui:nodegraph:node:stackingOrder = 1059
            }

            def Shader "Oneminus"
            {
                uniform token info:id = "ND_realitykit_oneminus_float"
                float inputs:in.connect = </Root/TestSkins/CellShader_D20/Step.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (81.4719, 98.00328)
                int ui:nodegraph:node:stackingOrder = 1065
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/TestSkins/CellShader_D20/Oneminus.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader_D20/Step_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (180.52245, 191.56462)
                int ui:nodegraph:node:stackingOrder = 1061
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader_D20/HighlightColor_1.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader_D20/Multiply_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (274.10245, 123.72297)
                int ui:nodegraph:node:stackingOrder = 1081
            }

            def Shader "Add"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader_D20/Multiply.outputs:out>
                color3f inputs:in2.connect = </Root/TestSkins/CellShader_D20/Multiply_2.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (382.9307, 71.356094)
                int ui:nodegraph:node:stackingOrder = 770
            }

            def Shader "ConstantColor3"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.581883, 0.21569154, 1) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-93.30839, 389.24158)
                int ui:nodegraph:node:stackingOrder = 1059
            }

            def Shader "Oneminus_1"
            {
                uniform token info:id = "ND_realitykit_oneminus_float"
                float inputs:in.connect = </Root/TestSkins/CellShader_D20/Step_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (92.1744, 326.52258)
                int ui:nodegraph:node:stackingOrder = 1078
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader_D20/ConstantColor3.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader_D20/Oneminus_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (279.69138, 316.68246)
                int ui:nodegraph:node:stackingOrder = 1075
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader_D20/Add.outputs:out>
                color3f inputs:in2.connect = </Root/TestSkins/CellShader_D20/Multiply_3.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (521.97284, 130.54642)
                int ui:nodegraph:node:stackingOrder = 775
            }

            def NodeGraph "Normals"
            {
                float3 outputs:NormalMap_out.connect = </Root/TestSkins/CellShader_D20/Normals/NormalMap.outputs:out>
                float2 ui:nodegraph:node:pos = (-948.8625, 110.46773)
                int ui:nodegraph:node:stackingOrder = 1072
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (631.75, 208.5)

                def Shader "Image"
                {
                    uniform token info:id = "ND_image_vector3"
                    asset inputs:file = @D20_SteelDark_normal.png@
                    string inputs:filtertype
                    string inputs:uaddressmode
                    string inputs:vaddressmode
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (108, 208.5)
                    int ui:nodegraph:node:stackingOrder = 322
                    string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default", "inputs:file"]
                }

                def Shader "NormalMap"
                {
                    uniform token info:id = "ND_normalmap"
                    float3 inputs:in.connect = </Root/TestSkins/CellShader_D20/Normals/Image.outputs:out>
                    float3 inputs:normal
                    float inputs:scale
                    string inputs:space = "tangent"
                    float3 inputs:tangent
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (371.5, 208.5)
                    int ui:nodegraph:node:stackingOrder = 324
                }
            }
        }

        def Material "CellShader1_D20"
        {
            reorder nameChildren = ["UnlitSurface", "LightDirection", "NormalsWorldSpace", "DotProduct", "NormalizeLightDirection", "NormalizeNormals", "Swizzle", "Normals", "Remap", "Step", "HighlightColor", "Multiply"]
            token outputs:mtlx:surface.connect = </Root/TestSkins/CellShader1_D20/UnlitSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (173.76611, 267.64175)
            int ui:nodegraph:node:stackingOrder = 1
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (957.9045, 203.34927)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 465

            def Shader "UnlitSurface"
            {
                uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                bool inputs:applyPostProcessToneMap = 0
                color3f inputs:color.connect = </Root/TestSkins/CellShader1_D20/Add_1.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:opacity
                float inputs:opacityThreshold
                token outputs:out
                float2 ui:nodegraph:node:pos = (736.7873, 151.54068)
                int ui:nodegraph:node:stackingOrder = 466
            }

            def Shader "LightDirection"
            {
                uniform token info:id = "ND_constant_vector3"
                float3 inputs:value = (1, 1, -1)
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-924.14844, 14.4453125)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "NormalsWorldSpace"
            {
                uniform token info:id = "ND_normal_vector3"
                string inputs:space = "world"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-981.09375, 108.5)
                int ui:nodegraph:node:stackingOrder = 752
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector3"
                float3 inputs:in1.connect = </Root/TestSkins/CellShader1_D20/NormalizeLightDirection.outputs:out>
                float3 inputs:in2.connect = </Root/TestSkins/CellShader1_D20/NormalizeNormals.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-473.5078, 62.07422)
                int ui:nodegraph:node:stackingOrder = 373
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "NormalizeLightDirection"
            {
                uniform token info:id = "ND_normalize_vector3"
                float3 inputs:in.connect = </Root/TestSkins/CellShader1_D20/LightDirection.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-695.1719, 14.40625)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "NormalizeNormals"
            {
                uniform token info:id = "ND_normalize_vector3"
                float3 inputs:in.connect = </Root/TestSkins/CellShader1_D20/NormalsWorldSpace.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-691.3672, 92.984375)
                int ui:nodegraph:node:stackingOrder = 373
            }

            def Shader "Remap"
            {
                uniform token info:id = "ND_remap_float"
                float inputs:in.connect = </Root/TestSkins/CellShader1_D20/DotProduct.outputs:out>
                float inputs:inhigh
                float inputs:inlow = -1
                float inputs:outhigh
                float outputs:out
                float2 ui:nodegraph:node:pos = (-298.5039, 84.64453)
                int ui:nodegraph:node:stackingOrder = 387
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader1_D20/HighlightColor.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Step.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (282.2286, 4.2061496)
                int ui:nodegraph:node:stackingOrder = 709
            }

            def Shader "HighlightColor"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.9995341, 0.9883556, 0.47265524) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-101.267105, -82.04098)
                int ui:nodegraph:node:stackingOrder = 675
            }

            def Shader "Step"
            {
                uniform token info:id = "ND_realitykit_step_float"
                float inputs:edge = 0.8
                float inputs:in.connect = </Root/TestSkins/CellShader1_D20/Remap.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-83.909225, 16.940786)
                int ui:nodegraph:node:stackingOrder = 748
            }

            def Shader "HighlightColor_1"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.45009387, 0.9813226, 0.47430307) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-76.02725, 182.39497)
                int ui:nodegraph:node:stackingOrder = 717
            }

            def Shader "Step_1"
            {
                uniform token info:id = "ND_realitykit_step_float"
                float inputs:edge = 0.4
                float inputs:in.connect = </Root/TestSkins/CellShader1_D20/Remap.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-53.416508, 284.15253)
                int ui:nodegraph:node:stackingOrder = 750
            }

            def Shader "Oneminus"
            {
                uniform token info:id = "ND_realitykit_oneminus_float"
                float inputs:in.connect = </Root/TestSkins/CellShader1_D20/Step.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (47.802944, 122.613846)
                int ui:nodegraph:node:stackingOrder = 703
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/TestSkins/CellShader1_D20/Oneminus.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Step_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (190.11278, 270.99457)
                int ui:nodegraph:node:stackingOrder = 705
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader1_D20/HighlightColor_1.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Multiply_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (295.2068, 236.52698)
                int ui:nodegraph:node:stackingOrder = 707
            }

            def Shader "Add"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader1_D20/Multiply.outputs:out>
                color3f inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Multiply_2.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (427.46585, 136.80531)
                int ui:nodegraph:node:stackingOrder = 712
            }

            def Shader "ConstantColor3"
            {
                uniform token info:id = "ND_constant_color3"
                color3f inputs:value = (0.581883, 0.21569154, 1) (
                    colorSpace = "srgb_texture"
                )
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-106.3086, 426.6962)
                int ui:nodegraph:node:stackingOrder = 746
            }

            def Shader "Oneminus_1"
            {
                uniform token info:id = "ND_realitykit_oneminus_float"
                float inputs:in.connect = </Root/TestSkins/CellShader1_D20/Step_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (91.09425, 376.709)
                int ui:nodegraph:node:stackingOrder = 737
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_color3FA"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader1_D20/ConstantColor3.outputs:out>
                float inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Oneminus_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (204.63972, 444.92267)
                int ui:nodegraph:node:stackingOrder = 739
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_color3"
                color3f inputs:in1.connect = </Root/TestSkins/CellShader1_D20/Add.outputs:out>
                color3f inputs:in2.connect = </Root/TestSkins/CellShader1_D20/Multiply_3.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (522.9963, 267.30423)
                int ui:nodegraph:node:stackingOrder = 744
            }
        }
    }

    def Xform "DarkMarble" (
        active = true
    )
    {
        reorder nameChildren = ["DarkMarble_D20", "DarkMarble_D12", "DarkMarble_D10", "DarkMarble_D08", "DarkMarble_D06", "DarkMarble_D04"]
        def Material "DarkMarble_D20"
        {
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness.connect = None
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/DarkMarble/DarkMarble_D20/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D20/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (0.6953125, 109.42578)
                int ui:nodegraph:node:stackingOrder = 100
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D20_DarkMarble/D20_DarkMarble_baseColor.jpg@
                string inputs:filtertype
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-370.3047, -172.95312)
                int ui:nodegraph:node:stackingOrder = 118
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D20_DarkMarble/D20_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-594.4414, -141.07031)
                int ui:nodegraph:node:stackingOrder = 119
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D20_DarkMarble/D20_DarkMarble_roughness.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-817.07336, -102.82156)
                int ui:nodegraph:node:stackingOrder = 120
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D20_DarkMarble/D20_DarkMarble_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-562.08307, 309.01675)
                int ui:nodegraph:node:stackingOrder = 122
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D20_DarkMarble/D20_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-261.91226, 317.72308)
                int ui:nodegraph:node:stackingOrder = 123
            }
        }

        def Material "DarkMarble_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D12/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 60
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D12_DarkMarble/D12_DarkMarble_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 66
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D12_DarkMarble/D12_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 67
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D12_DarkMarble/D12_DarkMarble_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 69
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D12_DarkMarble/D12_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 70
            }
        }

        def Material "DarkMarble_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-252.73111, 32.352287)
            int ui:nodegraph:node:stackingOrder = 1
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D10/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 60
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D10_DarkMarble/D10_DarkMarble_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 70
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D10_DarkMarble/D10_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 72
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D10_DarkMarble/D10_DarkMarble_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 74
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D10_DarkMarble/D10_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 75
            }
        }

        def Material "DarkMarble_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-232.73111, 52.352287)
            int ui:nodegraph:node:stackingOrder = 2
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D08/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 60
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D08_DarkMarble/D08_DarkMarble_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 74
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D08_DarkMarble/D08_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 76
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D08_DarkMarble/D08_DarkMarble_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 77
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D08_DarkMarble/D08_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 79
            }
        }

        def Material "DarkMarble_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-212.73111, 72.35229)
            int ui:nodegraph:node:stackingOrder = 3
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 60
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D06_DarkMarble/D06_DarkMarble_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 81
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D06_DarkMarble/D06_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 82
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D06_DarkMarble/D06_DarkMarble_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 84
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D06_DarkMarble/D06_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 85
            }
        }

        def Material "DarkMarble_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/DarkMarble/DarkMarble_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-192.73111, 92.35229)
            int ui:nodegraph:node:stackingOrder = 4
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/DarkMarble/DarkMarble_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/DarkMarble/DarkMarble_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic
                float3 inputs:normal.connect = </Root/DarkMarble/DarkMarble_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/DarkMarble/DarkMarble_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 60
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DarkMarble/D04_DarkMarble/D04_DarkMarble_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 88
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DarkMarble/D04_DarkMarble/D04_DarkMarble_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 89
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D04_DarkMarble/D04_DarkMarble_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 90
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DarkMarble/D04_DarkMarble/D04_DarkMarble_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 92
            }
        }
    }

    def Xform "Dice" (
        active = true
    )
    {
        def "D20" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D20.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D20> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def "D12" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D12.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D12> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, -2.203426)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def "D10" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D10.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D10> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, -0.018819570541381836, -4.343328475952148)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def "D08" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D08.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D08> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, -6.48288)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def "D06" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D06.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D06> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, -8.244607)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def "D04" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @D04.usdz@
        )
        {
            rel material:binding = </Root/BlueEdge/BlueEdge_D04> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (-0.11766064167022705, 1.4156103134155273e-7, -10.14943790435791)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Xform "GoldenDroid" (
        active = true
    )
    {
        reorder nameChildren = ["GoldenDroid_D04", "GoldenDroid_D06", "GoldenDroid_D08", "GoldenDroid_D10", "GoldenDroid_D12", "GoldenDroid_D20"]
        def Material "GoldenDroid_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-152.73111, 132.3523)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D04_GoldenDroid/D04_GoldenDroid_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 96
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D04_GoldenDroid/D04_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 97
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D04_GoldenDroid/D04_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 98
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D04_GoldenDroid/D04_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 99
            }
        }

        def Material "GoldenDroid_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-172.73111, 112.35229)
            int ui:nodegraph:node:stackingOrder = 5
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 98
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D06_GoldenDroid/D06_GoldenDroid_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 99
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D06_GoldenDroid/D06_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D06_GoldenDroid/D06_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D06_GoldenDroid/D06_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 103
            }
        }

        def Material "GoldenDroid_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-152.73111, 132.3523)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D08/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D08_GoldenDroid/D08_GoldenDroid_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 104
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D08_GoldenDroid/D08_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D08_GoldenDroid/D08_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D08_GoldenDroid/D08_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 107
            }
        }

        def Material "GoldenDroid_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-132.73111, 152.3523)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D10/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D10_GoldenDroid/D10_GoldenDroid_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 108
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D10_GoldenDroid/D10_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 109
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D10_GoldenDroid/D10_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 113
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D10_GoldenDroid/D10_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 117
            }
        }

        def Material "GoldenDroid_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-112.73111, 172.3523)
            int ui:nodegraph:node:stackingOrder = 8
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D12/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 112
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D12_GoldenDroid/D12_GoldenDroid_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 113
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D12_GoldenDroid/D12_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 114
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D12_GoldenDroid/D12_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 115
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D12_GoldenDroid/D12_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 119
            }
        }

        def Material "GoldenDroid_D20"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/GoldenDroid/GoldenDroid_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-92.73111, 192.3523)
            int ui:nodegraph:node:stackingOrder = 9
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/GoldenDroid/GoldenDroid_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/GoldenDroid/GoldenDroid_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor = (0, 0, 0) (
                    colorSpace = "srgb_displayp3"
                )
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/GoldenDroid/GoldenDroid_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/GoldenDroid/GoldenDroid_D20/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 141
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @GoldenDroid/D20_GoldenDroid/D20_GoldenDroid_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 142
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @GoldenDroid/D20_GoldenDroid/D20_GoldenDroid_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 143
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D20_GoldenDroid/D20_GoldenDroid_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 144
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @GoldenDroid/D20_GoldenDroid/D20_GoldenDroid_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 146
            }
        }
    }

    def Xform "PaintedWorn" (
        active = true
    )
    {
        reorder nameChildren = ["PaintedWorn_D04", "PaintedWorn_D06", "PaintedWorn_D08", "PaintedWorn_D10", "PaintedWorn_D12", "PaintedWorn_D20"]
        def Material "PaintedWorn_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-132.73111, 152.3523)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.35065, 167.71402)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 104

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D04_PaintedWorn/D04_PaintedWorn_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 106
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D04_PaintedWorn/D04_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.91434, -206.45667)
                int ui:nodegraph:node:stackingOrder = 113
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D04_PaintedWorn/D04_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-605.7854, -50.80914)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D04_PaintedWorn/D04_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 110
            }
        }

        def Material "PaintedWorn_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-112.73111, 172.3523)
            int ui:nodegraph:node:stackingOrder = 8
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (271.0003, 167.52812)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 115

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D06_PaintedWorn/D06_PaintedWorn_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 109
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D06_PaintedWorn/D06_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 110
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D06_PaintedWorn/D06_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 111
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D06_PaintedWorn/D06_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 112
            }
        }

        def Material "PaintedWorn_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-92.73111, 192.3523)
            int ui:nodegraph:node:stackingOrder = 9
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D08/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D08_PaintedWorn/D08_PaintedWorn_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 115
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D08_PaintedWorn/D08_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 118
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D08_PaintedWorn/D08_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 120
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D08_PaintedWorn/D08_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 121
            }
        }

        def Material "PaintedWorn_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-72.73111, 212.3523)
            int ui:nodegraph:node:stackingOrder = 10
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D10/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D10_PaintedWorn/D10_PaintedWorn_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 118
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D10_PaintedWorn/D10_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 120
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D10_PaintedWorn/D10_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 122
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D10_PaintedWorn/D10_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 124
            }
        }

        def Material "PaintedWorn_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-52.73111, 232.3523)
            int ui:nodegraph:node:stackingOrder = 11
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D12/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D12_PaintedWorn/D12_PaintedWorn_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 123
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D12_PaintedWorn/D12_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 125
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D12_PaintedWorn/D12_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 127
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D12_PaintedWorn/D12_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 128
            }
        }

        def Material "PaintedWorn_D20"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/PaintedWorn/PaintedWorn_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-32.73111, 252.3523)
            int ui:nodegraph:node:stackingOrder = 12
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/PaintedWorn/PaintedWorn_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/PaintedWorn/PaintedWorn_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float3 inputs:normal.connect = </Root/PaintedWorn/PaintedWorn_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/PaintedWorn/PaintedWorn_D20/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @PaintedWorn/D20_PaintedWorn/D20_PaintedWorn_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-604.3489, -482.86978)
                int ui:nodegraph:node:stackingOrder = 128
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D20_PaintedWorn/D20_PaintedWorn_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 130
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @PaintedWorn/D20_PaintedWorn/D20_PaintedWorn_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 132
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @PaintedWorn/D20_PaintedWorn/D20_PaintedWorn_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 134
            }
        }
    }

    def Xform "Sapphire" (
        active = true
    )
    {
        reorder nameChildren = ["Sapphire_D04", "Sapphire_D06", "Sapphire_D08", "Sapphire_D10", "Sapphire_D12", "Sapphire_D20"]
        def Material "Sapphire_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-112.73111, 172.3523)
            int ui:nodegraph:node:stackingOrder = 8
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D04/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D04_Sapphire/D04_Sapphire_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-547.13434, -478.93372)
                int ui:nodegraph:node:stackingOrder = 192
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D04_Sapphire/D04_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-285.50055, -208.26054)
                int ui:nodegraph:node:stackingOrder = 194
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D04_Sapphire/D04_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-548.68024, -47.484684)
                int ui:nodegraph:node:stackingOrder = 196
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @Sapphire/D04_Sapphire/D04_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-286.23093, 222.16682)
                int ui:nodegraph:node:stackingOrder = 198
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D04_Sapphire/D04_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-560.02814, 375.0529)
                int ui:nodegraph:node:stackingOrder = 204
            }
        }

        def Material "Sapphire_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-92.73111, 192.3523)
            int ui:nodegraph:node:stackingOrder = 9
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D06/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D06_Sapphire/D06_Sapphire_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-616.62946, -477.75143)
                int ui:nodegraph:node:stackingOrder = 114
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D06_Sapphire/D06_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 115
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D06_Sapphire/D06_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D06_Sapphire/D06_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-616.48145, 372.7364)
                int ui:nodegraph:node:stackingOrder = 118
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D06_Sapphire/D06_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 119
            }
        }

        def Material "Sapphire_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-72.73111, 212.3523)
            int ui:nodegraph:node:stackingOrder = 10
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D08/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D08/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D08_Sapphire/D08_Sapphire_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-616.62946, -477.75143)
                int ui:nodegraph:node:stackingOrder = 121
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D08_Sapphire/D08_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 122
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D08_Sapphire/D08_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 124
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D08_Sapphire/D08_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 125
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D08_Sapphire/D08_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-616.48145, 372.7364)
                int ui:nodegraph:node:stackingOrder = 127
            }
        }

        def Material "Sapphire_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-52.73111, 232.3523)
            int ui:nodegraph:node:stackingOrder = 11
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D10/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D10/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D10_Sapphire/D10_Sapphire_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-616.62946, -477.75143)
                int ui:nodegraph:node:stackingOrder = 127
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D10_Sapphire/D10_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 128
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D10_Sapphire/D10_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 129
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D10_Sapphire/D10_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-616.48145, 372.7364)
                int ui:nodegraph:node:stackingOrder = 132
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D10_Sapphire/D10_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 133
            }
        }

        def Material "Sapphire_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-32.73111, 252.3523)
            int ui:nodegraph:node:stackingOrder = 12
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D12/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D12/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D12_Sapphire/D12_Sapphire_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-616.62946, -477.75143)
                int ui:nodegraph:node:stackingOrder = 132
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D12_Sapphire/D12_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 134
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D12_Sapphire/D12_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 135
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D12_Sapphire/D12_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-616.48145, 372.7364)
                int ui:nodegraph:node:stackingOrder = 136
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D12_Sapphire/D12_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 138
            }
        }

        def Material "Sapphire_D20"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/Sapphire/Sapphire_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-12.73111, 272.3523)
            int ui:nodegraph:node:stackingOrder = 13
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 166.41547)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 144

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/Sapphire/Sapphire_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/Sapphire/Sapphire_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 0.9
                float inputs:metallic.connect = </Root/Sapphire/Sapphire_D20/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/Sapphire/Sapphire_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/Sapphire/Sapphire_D20/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @Sapphire/D20_Sapphire/D20_Sapphire_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-616.62946, -477.75143)
                int ui:nodegraph:node:stackingOrder = 137
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @Sapphire/D20_Sapphire/D20_Sapphire_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 138
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D20_Sapphire/D20_Sapphire_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 139
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D20_Sapphire/D20_Sapphire_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-616.48145, 372.7364)
                int ui:nodegraph:node:stackingOrder = 140
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @Sapphire/D20_Sapphire/D20_Sapphire_occlusion.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 141
            }
        }
    }

    def Xform "SteelDarkAged" (
        active = true
    )
    {
        reorder nameChildren = ["SteelDarkAged_D04", "SteelDarkAged_D06", "SteelDarkAged_D08", "SteelDarkAged_D10", "SteelDarkAged_D12", "SteelDarkAged_D20"]
        def Material "SteelDarkAged_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-92.73111, 192.3523)
            int ui:nodegraph:node:stackingOrder = 9
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D04/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D04/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 124
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 129
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 131
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 133
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 134
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D04_SteelDarkAgedPink_damaged/D04_SteelDarkAged_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 135
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "SteelDarkAged_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-72.73111, 212.3523)
            int ui:nodegraph:node:stackingOrder = 10
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D06/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D06/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 125
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 126
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 127
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 128
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.425, 362.95517)
                int ui:nodegraph:node:stackingOrder = 129
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D06_SteelDarkAgedPink_damaged/D06_SteelDarkAged_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-896.76306, 91.74946)
                int ui:nodegraph:node:stackingOrder = 131
            }
        }

        def Material "SteelDarkAged_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-52.73111, 232.3523)
            int ui:nodegraph:node:stackingOrder = 11
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D08/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D08/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D08/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 135
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 136
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 137
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 138
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.425, 362.95517)
                int ui:nodegraph:node:stackingOrder = 139
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D08_SteelDarkAgedPink_damaged/D08_SteelDarkAged_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-851.6801, 73.348915)
                int ui:nodegraph:node:stackingOrder = 140
            }
        }

        def Material "SteelDarkAged_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-32.73111, 252.3523)
            int ui:nodegraph:node:stackingOrder = 12
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D10/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D10/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D10/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 146
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 147
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 148
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.425, 362.95517)
                int ui:nodegraph:node:stackingOrder = 150
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_metallic.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-848.78906, 152.0641)
                int ui:nodegraph:node:stackingOrder = 151
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D10_SteelDarkAgedPink_damaged/D10_SteelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 152
            }
        }

        def Material "SteelDarkAged_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-12.73111, 272.3523)
            int ui:nodegraph:node:stackingOrder = 13
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D12/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D12/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D12/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 153
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 154
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 157
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.425, 362.95517)
                int ui:nodegraph:node:stackingOrder = 156
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_metallic.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-848.78906, 152.0641)
                int ui:nodegraph:node:stackingOrder = 158
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D12_SteelDarkAgedPind_damaged/D12_SteelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 155
            }
        }

        def Material "SteelDarkAged_D20"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/SteelDarkAged/SteelDarkAged_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (7.2688904, 292.3523)
            int ui:nodegraph:node:stackingOrder = 14
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/SteelDarkAged/SteelDarkAged_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/SteelDarkAged/SteelDarkAged_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/SteelDarkAged/SteelDarkAged_D20/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/SteelDarkAged/SteelDarkAged_D20/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/SteelDarkAged/SteelDarkAged_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/SteelDarkAged/SteelDarkAged_D20/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 159
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 160
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 166
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.425, 362.95517)
                int ui:nodegraph:node:stackingOrder = 164
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_metallic.jpg@
                string inputs:filtertype
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-848.78906, 152.0641)
                int ui:nodegraph:node:stackingOrder = 163
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @SteelDarkAgedPink/D20_SteelDarkAgedPink_damaged/D20_SteelDark_Pink_damaged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 165
            }
        }
    }

    def Xform "Clouds" (
        active = true
    )
    {
        def Material "Clouds_D20"
        {
            token outputs:mtlx:surface.connect = </Root/Clouds/Clouds_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

            def Shader "Fractal3D"
            {
                uniform token info:id = "ND_fractal3d_float"
                float inputs:diminish
                float inputs:lacunarity = 3
                int inputs:octaves = 6
                float3 inputs:position.connect = </Root/Clouds/Clouds_D20/Add.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-710.70154, -37.023285)
                int ui:nodegraph:node:stackingOrder = 222
            }

            def Shader "Mix"
            {
                uniform token info:id = "ND_mix_color3"
                color3f inputs:bg = (0.0722022, 0.6603385, 1) (
                    colorSpace = "srgb_displayp3"
                )
                color3f inputs:fg = (1, 1, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:mix = 0.5
                float inputs:mix.connect = </Root/Clouds/Clouds_D20/Abs.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-231.51562, -77.74219)
                int ui:nodegraph:node:stackingOrder = 230
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:fg"]
            }

            def Shader "Abs"
            {
                uniform token info:id = "ND_absval_float"
                float inputs:in.connect = </Root/Clouds/Clouds_D20/Multiply_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-376.0547, -46.910156)
                int ui:nodegraph:node:stackingOrder = 228
            }

            def Shader "Time"
            {
                uniform token info:id = "ND_time_float"
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1255.6953, 11.64403)
                int ui:nodegraph:node:stackingOrder = 133
            }

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1253.7434, -102.43755)
                int ui:nodegraph:node:stackingOrder = 131
            }

            def Shader "Add"
            {
                uniform token info:id = "ND_add_vector3FA"
                float3 inputs:in1.connect = </Root/Clouds/Clouds_D20/Position.outputs:out>
                float inputs:in2.connect = </Root/Clouds/Clouds_D20/Multiply.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-940.29297, 11.550781)
                int ui:nodegraph:node:stackingOrder = 72
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Clouds/Clouds_D20/Time.outputs:out>
                float inputs:in2 = 0.1
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1131.748, 22.534328)
                int ui:nodegraph:node:stackingOrder = 150
            }

            def Shader "Fractal3D_1"
            {
                uniform token info:id = "ND_fractal3d_float"
                float inputs:diminish
                float inputs:lacunarity = 3
                int inputs:octaves = 6
                float3 inputs:position.connect = </Root/Clouds/Clouds_D20/Add_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-712.1822, -242.56276)
                int ui:nodegraph:node:stackingOrder = 222
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Clouds/Clouds_D20/Fractal3D_1.outputs:out>
                float inputs:in2.connect = </Root/Clouds/Clouds_D20/Fractal3D.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-492.4375, -46.96875)
                int ui:nodegraph:node:stackingOrder = 137
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_vector3"
                float3 inputs:in1.connect = </Root/Clouds/Clouds_D20/Position.outputs:out>
                float3 inputs:in2.connect = None
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1012.85156, -166.3164)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_vector3FA"
                float3 inputs:in1.connect = </Root/Clouds/Clouds_D20/Multiply_2.outputs:out>
                float inputs:in2.connect = </Root/Clouds/Clouds_D20/Multiply_3.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-896.71094, -156.64453)
                int ui:nodegraph:node:stackingOrder = 123
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/Clouds/Clouds_D20/Multiply.outputs:out>
                float inputs:in2 = 0.5
                float inputs:in2.connect = None
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1010.3113, -81.39335)
                int ui:nodegraph:node:stackingOrder = 224
            }

            def Shader "Image"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @D20_Assets/D20_SteelDark_emissive.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-420.55228, 193.9742)
                int ui:nodegraph:node:stackingOrder = 262
            }

            def Shader "Add_2"
            {
                uniform token info:id = "ND_add_color3FA"
                color3f inputs:in1.connect = </Root/Clouds/Clouds_D20/Mix.outputs:out>
                float inputs:in2.connect = </Root/Clouds/Clouds_D20/Image.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-94.44429, 62.730732)
                int ui:nodegraph:node:stackingOrder = 259
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                color3f inputs:baseColor.connect = </Root/Clouds/Clouds_D20/Add_2.outputs:out>
                float3 inputs:clearcoatNormal
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                token outputs:out
                float2 ui:nodegraph:node:pos = (82.38587, 157.18704)
                int ui:nodegraph:node:stackingOrder = 252
            }
        }
    }

    def Xform "BlueEdge" (
        active = true
    )
    {
        reorder nameChildren = ["BlueEdge_D04", "BlueEdge_D06", "BlueEdge_D08", "BlueEdge_D10", "BlueEdge_D12", "BlueEdge_D20"]
        def Material "BlueEdge_D04"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D04/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-72.73111, 212.3523)
            int ui:nodegraph:node:stackingOrder = 10
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D04/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D04/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D04/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D04/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D04/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D04/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 146
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 148
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 153
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 137
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 143
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D04_BlueEdge/D04_BlueEdge_baseColor.png@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 141
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "BlueEdge_D06"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D06/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-52.73111, 232.3523)
            int ui:nodegraph:node:stackingOrder = 11
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D06/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D06/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D06/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D06/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D06/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D06/Roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 161
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 159
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 158
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 154
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 160
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D06_BlueEdge/D06_BlueEdge_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 155
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "BlueEdge_D08"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D08/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-32.73111, 252.3523)
            int ui:nodegraph:node:stackingOrder = 12
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D08/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D08/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D08/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D08/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D08/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D08/Roughness.outputs:out>
                float inputs:specular = 0
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 173
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 168
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 166
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 165
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 163
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 164
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D08_BlueEdge/D08_BlueEdge_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 162
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "BlueEdge_D10"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D10/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (-12.73111, 272.3523)
            int ui:nodegraph:node:stackingOrder = 13
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D10/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D10/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D10/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D10/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D10/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D10/Roughness.outputs:out>
                float inputs:specular = 0
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 173
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 185
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 182
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 180
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 177
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 184
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D10_BlueEdge/D10_BlueEdge_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 175
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "BlueEdge_D12"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D12/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (7.2688904, 292.3523)
            int ui:nodegraph:node:stackingOrder = 14
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D12/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D12/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D12/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D12/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D12/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D12/Roughness.outputs:out>
                float inputs:specular = 0
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 173
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 191
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 190
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 188
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 187
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 189
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D12_BlueEdge/D12_Blue_Edge_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 186
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }

        def Material "BlueEdge_D20"
        {
            reorder nameChildren = ["PBRSurface", "Image", "Image_1", "Image_2", "Image_3", "Clouds_D20"]
            token outputs:mtlx:surface.connect = </Root/BlueEdge/BlueEdge_D20/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:node:pos = (27.26889, 312.3523)
            int ui:nodegraph:node:stackingOrder = 15
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (273.74237, 169.82535)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 62

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/BlueEdge/BlueEdge_D20/AO.outputs:out>
                color3f inputs:baseColor.connect = </Root/BlueEdge/BlueEdge_D20/BaseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor.connect = </Root/BlueEdge/BlueEdge_D20/Emissive.outputs:out>
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic = 1
                float inputs:metallic.connect = </Root/BlueEdge/BlueEdge_D20/Metalness.outputs:out>
                float3 inputs:normal.connect = </Root/BlueEdge/BlueEdge_D20/Normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/BlueEdge/BlueEdge_D20/Roughness.outputs:out>
                float inputs:specular = 0
                token outputs:out
                float2 ui:nodegraph:node:pos = (2.6960206, 41.030357)
                int ui:nodegraph:node:stackingOrder = 173
            }

            def Shader "Metalness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_metallic.jpg@
                string inputs:filtertype
                float outputs:out
                float2 ui:nodegraph:node:pos = (-845.2131, 52.730865)
                int ui:nodegraph:node:stackingOrder = 198
            }

            def Shader "Emissive"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_emissive.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-619.8268, 367.86023)
                int ui:nodegraph:node:stackingOrder = 196
            }

            def Shader "AO"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-347.30594, 226.72006)
                int ui:nodegraph:node:stackingOrder = 195
            }

            def Shader "Normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_normal.png@
                string inputs:filtertype
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-352.4828, -204.79681)
                int ui:nodegraph:node:stackingOrder = 193
            }

            def Shader "Roughness"
            {
                uniform token info:id = "ND_image_float"
                float inputs:default
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_roughness.jpg@
                string inputs:filtertype
                float2 inputs:texcoord
                string inputs:uaddressmode
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-617.57697, -51.924557)
                int ui:nodegraph:node:stackingOrder = 194
            }

            def Shader "BaseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @BlueEdge/D20_BlueEdge/D20_BlueEdge_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-618.0699, -468.41434)
                int ui:nodegraph:node:stackingOrder = 192
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }
        }
    }
}

