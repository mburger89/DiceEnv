#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.120.2)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Xform "TraySkins" (
        active = true
    )
    {
        reorder nameChildren = ["woodAcajou_tray", "boneStylized_tray", "bronzeArmor_tray", "carbonFiber_tray", "clayTerracotta_tray", "creatureSkinGreen_tray", "fabricWoolJersey_tray", "leatherCalfGrain_tray", "leatheretteDamaged_tray", "leatherGrain_tray", "leatherSofa_tray", "leatherStylized_tray", "marbleFineWhite_tray", "marblePolished_tray", "marbleVeined_tray", "marbleVerdiAlpi_tray", "metalCyborg_tray", "paintBrushed_tray", "paintRoll_tray", "plasticComposite_tray", "plasticUsed_tray", "plasticUsedSoft_tray", "rubberDry_tray", "rubberRaw_tray", "steelDarkAged_tray", "fabricWoolHerringbone_tray", "leatherWeathered_tray", "steelScratched_tray", "stoneTravertine_tray", "stylizedWoodPlain_tray", "terazzoComposite_tray", "woodPlain_tray"]
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "woodAcajou_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/woodAcajou_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/woodAcajou_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/woodAcajou_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/woodAcajou_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/woodAcajou_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/woodAcajou_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 89
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:baseColor"]
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/woodAcajou/M_woodAcajou_baseColor.jpg@ (
                    colorSpace = "srgb_texture"
                )
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 91
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:default"]
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/woodAcajou/M_woodAcajou_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 65
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodAcajou/M_woodAcajou_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-520.1284, 391.8576)
                int ui:nodegraph:node:stackingOrder = 80
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodAcajou/M_woodAcajou_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 94
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodAcajou/M_woodAcajou_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-247.48308, 319.52206)
                int ui:nodegraph:node:stackingOrder = 82
            }
        }

        def Material "boneStylized_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/boneStylized_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (-116.17813, 237.64055)
            int ui:nodegraph:node:stackingOrder = 1
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/boneStylized_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/boneStylized_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/boneStylized_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/boneStylized_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/boneStylized_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (277.57547, 138.64284)
                int ui:nodegraph:node:stackingOrder = 89
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/boneStylized/M_boneStylized_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 78
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/boneStylized/M_boneStylized_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 79
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/boneStylized/M_boneStylized_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 87
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/boneStylized/M_boneStylized_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 82
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/boneStylized/M_boneStylized_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 84
            }
        }

        def Material "bronzeArmor_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/bronzeArmor_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (219.79866, 101.92959)
            int ui:nodegraph:node:stackingOrder = 1
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/bronzeArmor_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/bronzeArmor_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/bronzeArmor_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/bronzeArmor_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/bronzeArmor_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/bronzeArmor/M_bronzeArmor_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 90
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/bronzeArmor/M_bronzeArmor_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 91
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/bronzeArmor/M_bronzeArmor_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 95
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/bronzeArmor/M_bronzeArmor_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 92
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/bronzeArmor/M_bronzeArmor_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 94
            }
        }

        def Material "carbonFiber_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/carbonFiber_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (239.79866, 121.92959)
            int ui:nodegraph:node:stackingOrder = 2
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/carbonFiber_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/carbonFiber_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/carbonFiber_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/carbonFiber_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/carbonFiber_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/carbonFiber/M_carbonFiber_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 96
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/carbonFiber/M_carbonFiber_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 98
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/carbonFiber/M_carbonFiber_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/carbonFiber/M_carbonFiber_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 100
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/carbonFiber/M_carbonFiber_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 101
            }
        }

        def Material "clayTerracotta_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/clayTerracotta_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (259.79865, 141.9296)
            int ui:nodegraph:node:stackingOrder = 3
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/clayTerracotta_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/clayTerracotta_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/clayTerracotta_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/clayTerracotta_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/clayTerracotta_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 96
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 98
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 100
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 102
            }
        }

        def Material "creatureSkinGreen_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/creatureSkinGreen_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (279.79865, 161.9296)
            int ui:nodegraph:node:stackingOrder = 4
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/creatureSkinGreen_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/creatureSkinGreen_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/creatureSkinGreen_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/creatureSkinGreen_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/creatureSkinGreen_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/creatureSkinGreen/M_creatureSkinGreen_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 96
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 97
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/creatureSkinGreen/M_creatureSkinGreen_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 100
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/clayTerracotta/M_clayTerracotta_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 98
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/creatureSkinGreen/M_creatureSkinGreen_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 99
            }
        }

        def Material "fabricWoolJersey_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/fabricWoolJersey_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (299.79865, 181.9296)
            int ui:nodegraph:node:stackingOrder = 5
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/fabricWoolJersey_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/fabricWoolJersey_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/fabricWoolJersey_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/fabricWoolJersey_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/fabricWoolJersey_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/fabricWoolJersey/M_fabricWoolJersey_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 108
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/fabricWoolJersey/M_fabricWoolJersey_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 109
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolJersey/M_fabricWoolJersey_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 112
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolJersey/M_fabricWoolJersey_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 113
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolJersey/M_fabricWoolJersey_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 111
            }
        }

        def Material "leatherCalfGrain_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatherCalfGrain_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatherCalfGrain_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatherCalfGrain_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatherCalfGrain_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatherCalfGrain_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatherCalfGrain_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatherCalfGrain/M_leatherCalfGrain_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatherCalfGrain/M_leatherCalfGrain_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherCalfGrain/M_leatherCalfGrain_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 117
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherCalfGrain/M_leatherCalfGrain_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 115
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherCalfGrain/M_leatherCalfGrain_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 116
            }
        }

        def Material "leatheretteDamaged_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatheretteDamaged_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatheretteDamaged_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatheretteDamaged_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatheretteDamaged_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatheretteDamaged_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatheretteDamaged_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatheretteDamaged/M_leatheretteDamaged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatheretteDamaged/M_leatheretteDamaged_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatheretteDamaged/M_leatheretteDamaged_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatheretteDamaged/M_leatheretteDamaged_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatheretteDamaged/M_leatheretteDamaged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "leatherGrain_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatherGrain_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatherGrain_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatherGrain_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatherGrain_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatherGrain_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatherGrain_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatherGrain/M_leatherGrain_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatherGrain/M_leatherGrain_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherGrain/M_leatherGrain_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 108
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherGrain/M_leatherGrain_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherGrain/M_leatherGrain_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "leatherSofa_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatherSofa_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatherSofa_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatherSofa_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatherSofa_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatherSofa_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatherSofa_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatherSofa/M_leatherSofa_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatherSofa/M_leatherSofa_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherSofa/M_leatherSofa_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 110
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherSofa/M_leatherSofa_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 108
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherSofa/M_leatherSofa_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 109
            }
        }

        def Material "leatherStylized_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatherStylized_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatherStylized_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatherStylized_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatherStylized_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatherStylized_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatherStylized_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatherStylized/M_leatherStylized_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatherStylized/M_leatherStylized_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized/M_leatherStylized_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized/M_leatherStylized_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized/M_leatherStylized_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "marbleFineWhite_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/marbleFineWhite_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/marbleFineWhite_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/marbleFineWhite_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/marbleFineWhite_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/marbleFineWhite_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/marbleFineWhite_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/marbleFineWhite/M_marbleFineWhite_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/marbleFineWhite/M_marbleFineWhite_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleFineWhite/M_marbleFineWhite_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleFineWhite/M_marbleFineWhite_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleFineWhite/M_marbleFineWhite_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "marblePolished_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/marblePolished_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/marblePolished_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/marblePolished_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/marblePolished_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/marblePolished_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/marblePolished_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/marblePolished/M_marblePolished_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/marblePolished/M_marblePolished_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marblePolished/M_marblePolished_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marblePolished/M_marblePolished_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marblePolished/M_marblePolished_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "marbleVeined_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/marbleVeined_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/marbleVeined_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/marbleVeined_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/marbleVeined_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/marbleVeined_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/marbleVeined_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/marbleVeined/M_marbleVeined_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/marbleVeined/M_marbleVeined_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVeined/M_marbleVeined_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVeined/M_marbleVeined_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVeined/M_marbleVeined_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "marbleVerdiAlpi_tray"
        {
            reorder nameChildren = ["UsdPreviewSurface", "PBRSurface", "baseColor", "normal", "roughness", "metallic", "occlusion", "metalCyborg_tray"]
            token outputs:mtlx:surface.connect = </Root/TraySkins/marbleVerdiAlpi_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/marbleVerdiAlpi_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/marbleVerdiAlpi_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/marbleVerdiAlpi_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/marbleVerdiAlpi_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/marbleVerdiAlpi_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/marbleVerdiAlpi/M_marbleVerdiAlpi_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/marbleVerdiAlpi/M_marbleVerdiAlpi_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVerdiAlpi/M_marbleVerdiAlpi_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVerdiAlpi/M_marbleVerdiAlpi_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/marbleVerdiAlpi/M_marbleVerdiAlpi_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "metalCyborg_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/metalCyborg_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/metalCyborg_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/metalCyborg_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/metalCyborg_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/metalCyborg_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/metalCyborg_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/metalCyborg/M_metalCyborg_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/metalCyborg/M_metalCyborg_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/metalCyborg/M_metalCyborg_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/metalCyborg/M_metalCyborg_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/metalCyborg/M_metalCyborg_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "paintBrushed_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/paintBrushed_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/paintBrushed_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/paintBrushed_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/paintBrushed_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/paintBrushed_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/paintBrushed_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/paintBrushed/M_paintBrushed_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/paintBrushed/M_paintBrushed_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintBrushed/M_paintBrushed_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 129
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintBrushed/M_paintBrushed_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintBrushed/M_paintBrushed_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "paintRoll_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/paintRoll_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/paintRoll_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/paintRoll_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/paintRoll_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/paintRoll_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/paintRoll_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/paintRoll/M_paintRoll_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/paintRoll/M_paintRoll_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintRoll/M_paintRoll_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintRoll/M_paintRoll_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/paintRoll/M_paintRoll_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 106
            }
        }

        def Material "plasticComposite_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/plasticComposite_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/plasticComposite_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/plasticComposite_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/plasticComposite_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/plasticComposite_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/plasticComposite_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/plasticComposite/M_plasticComposite_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/plasticComposite/M_plasticComposite_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticComposite/M_plasticComposite_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticComposite/M_plasticComposite_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticComposite/M_plasticComposite_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "plasticUsed_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/plasticUsed_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/plasticUsed_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/plasticUsed_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/plasticUsed_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/plasticUsed_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/plasticUsed_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/plasticUsed/M_plasticUsed_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/plasticUsed/M_plasticUsed_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsed/M_plasticUsed_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsed/M_plasticUsed_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsed/M_plasticUsed_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 104
            }
        }

        def Material "plasticUsedSoft_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/plasticUsedSoft_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/plasticUsedSoft_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/plasticUsedSoft_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/plasticUsedSoft_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/plasticUsedSoft_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/plasticUsedSoft_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/plasticUsedSoft/M_plasticUsedSoft_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/plasticUsedSoft/M_plasticUsedSoft_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsedSoft/M_plasticUsedSoft_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsedSoft/M_plasticUsedSoft_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/plasticUsedSoft/M_plasticUsedSoft_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "rubberDry_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/rubberDry_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/rubberDry_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/rubberDry_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/rubberDry_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/rubberDry_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/rubberDry_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/rubberDry/M_rubberDry_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/rubberDry/M_rubberDry_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberDry/M_rubberDry_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberDry/M_rubberDry_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberDry/M_rubberDry_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 104
            }
        }

        def Material "rubberRaw_tray"
        {
            reorder nameChildren = ["UsdPreviewSurface", "PBRSurface", "baseColor", "normal", "roughness", "metallic", "occlusion"]
            token outputs:mtlx:surface.connect = </Root/TraySkins/rubberRaw_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/rubberRaw_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/rubberRaw_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/rubberRaw_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/rubberRaw_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/rubberRaw_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/rubberRaw/M_rubberRaw_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/rubberRaw/M_rubberRaw_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberRaw/M_rubberRaw_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberRaw/M_rubberRaw_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/rubberRaw/M_rubberRaw_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 104
            }
        }

        def Material "steelScratched_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/steelScratched_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/steelScratched_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/steelScratched_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/steelScratched_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/steelScratched_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/steelScratched_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/steelScratched/M_steelScratched_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/steelScratched/M_steelScratched_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelScratched/M_steelScratched_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelScratched/M_steelScratched_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelScratched/M_steelScratched_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "stoneTravertine_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/stoneTravertine_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/stoneTravertine_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/stoneTravertine_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/stoneTravertine_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/stoneTravertine_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/stoneTravertine_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/stoneTravertine/M_stoneTravertine_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/stoneTravertine/M_stoneTravertine_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stoneTravertine/M_stoneTravertine_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 108
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stoneTravertine/M_stoneTravertine_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stoneTravertine/M_stoneTravertine_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 107
            }
        }

        def Material "stylizedWoodPlain_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/stylizedWoodPlain_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/stylizedWoodPlain_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/stylizedWoodPlain_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/stylizedWoodPlain_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/stylizedWoodPlain_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/stylizedWoodPlain_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 104
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 105
            }
        }

        def Material "terazzoComposite_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/terazzoComposite_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/terazzoComposite_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/terazzoComposite_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/terazzoComposite_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/terazzoComposite_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/terazzoComposite_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/terazzoComposite/M_terazzoComposite_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 107
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/terazzoComposite/M_terazzoComposite_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 108
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/terazzoComposite/M_terazzoComposite_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 111
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/terazzoComposite/M_terazzoComposite_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 109
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/stylizedWoodPlain/M_stylizedWoodPlain_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 110
            }
        }

        def Material "woodPlain_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/woodPlain_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/woodPlain_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/woodPlain_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/woodPlain_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/woodPlain_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/woodPlain_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/woodPlain/M_woodPlain_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/woodPlain/M_woodPlain_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodPlain/M_woodPlain_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 106
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodPlain/M_woodPlain_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/woodPlain/M_woodPlain_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 104
            }
        }

        def Material "steelDarkAged_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/steelDarkAged_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/steelDarkAged_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/steelDarkAged_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/steelDarkAged_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/steelDarkAged_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/steelDarkAged_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/steelDarkAged/M_steelDarkAged_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 101
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/steelDarkAged/M_steelDarkAged_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 102
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelDarkAged/M_steelDarkAged_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 105
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelDarkAged/M_steelDarkAged_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 103
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/steelDarkAged/M_steelDarkAged_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 104
            }
        }

        def Material "fabricWoolHerringbone_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/fabricWoolHerringbone_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (319.79865, 201.9296)
            int ui:nodegraph:node:stackingOrder = 6
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/fabricWoolHerringbone_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/fabricWoolHerringbone_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/fabricWoolHerringbone_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/fabricWoolHerringbone_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/fabricWoolHerringbone_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/fabricWoolHerringbone/M_fabricWoolHerringbone_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/fabricWoolHerringbone/M_fabricWoolHerringbone_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 117
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolHerringbone/M_fabricWoolHerringbone_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 119
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolHerringbone/M_fabricWoolHerringbone_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 120
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/fabricWoolHerringbone/M_fabricWoolHerringbone_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 118
            }
        }

        def Material "leatherWeathered_tray"
        {
            token outputs:mtlx:surface.connect = </Root/TraySkins/leatherWeathered_tray/PBRSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = None
            float2 ui:nodegraph:node:pos = (339.79865, 221.9296)
            int ui:nodegraph:node:stackingOrder = 7
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (595.2656, 104.76172)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 24

            def Shader "UsdPreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                token outputs:surface
            }

            def Shader "PBRSurface"
            {
                uniform token info:id = "ND_realitykit_pbr_surfaceshader"
                float inputs:ambientOcclusion.connect = </Root/TraySkins/leatherWeathered_tray/occlusion.outputs:out>
                color3f inputs:baseColor.connect = </Root/TraySkins/leatherWeathered_tray/baseColor.outputs:out>
                float inputs:clearcoat
                float3 inputs:clearcoatNormal
                float inputs:clearcoatRoughness
                color3f inputs:emissiveColor
                bool inputs:hasPremultipliedAlpha
                float inputs:metallic.connect = </Root/TraySkins/leatherWeathered_tray/metallic.outputs:out>
                float3 inputs:normal.connect = </Root/TraySkins/leatherWeathered_tray/normal.outputs:out>
                float inputs:opacity
                float inputs:opacityThreshold
                float inputs:roughness.connect = </Root/TraySkins/leatherWeathered_tray/roughness.outputs:out>
                float inputs:specular
                token outputs:out
                float2 ui:nodegraph:node:pos = (273.98438, 150.1914)
                int ui:nodegraph:node:stackingOrder = 28
            }

            def Shader "baseColor"
            {
                uniform token info:id = "ND_image_color3"
                asset inputs:file = @DiceTray_skins/leatherStylized-2/M_leatherStylized-2_baseColor.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (-249.05481, -101.99056)
                int ui:nodegraph:node:stackingOrder = 111
            }

            def Shader "normal"
            {
                uniform token info:id = "ND_image_vector3"
                asset inputs:file = @DiceTray_skins/leatherStylized-2/M_leatherStylized-2_normal.png@
                string inputs:filtertype
                string inputs:vaddressmode
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-518.7391, -27.626886)
                int ui:nodegraph:node:stackingOrder = 113
            }

            def Shader "roughness"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized-2/M_leatherStylized-2_roughness.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-505.74948, 569.27167)
                int ui:nodegraph:node:stackingOrder = 115
            }

            def Shader "metallic"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized-2/M_leatherStylized-2_metallic.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-819.1219, 94.67451)
                int ui:nodegraph:node:stackingOrder = 116
            }

            def Shader "occlusion"
            {
                uniform token info:id = "ND_image_float"
                asset inputs:file = @DiceTray_skins/leatherStylized-2/M_leatherStylized-2_occlusion.jpg@
                string inputs:filtertype
                string inputs:vaddressmode
                float outputs:out
                float2 ui:nodegraph:node:pos = (-179.65105, 384.83847)
                int ui:nodegraph:node:stackingOrder = 114
            }
        }
    }

    def "diceTray" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (-1.5707964, 0, 0)
        }
        prepend references = @diceTray.usdz@
    )
    {
        rel material:binding = </Root/TraySkins/woodAcajou_tray> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.0024234056, -1.1920929e-7, 0.009787083)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (1.9999999, 1.9999998, 0.43287697)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (5.9604645e-8, 2.9802322e-8, 0.21627574)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            token motionType = "Static"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }

    def "DiceCover" (
        active = true
        prepend references = @DiceCover.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (200, 200.00003, 200.00003)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 143.23518, -0.0000038146973)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            token motionType = "Static"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }
}

